/**
* @prop --cmb_font-size, --kup-combo_input_font-size: Regulates sizes of the font and the icon
* @prop --cmb_border-color, --kup-combo_input_border-color: Specifies the border color
* @prop --cmb_border-color--selected, --kup-combo_input_border-color: Specifies the border color when focused
* @prop --cmb_tr-duration, --kup-combo_input_transition-duration: Animation duration of all animations of the component
* @prop --cmb_icon-color, --kup-combo_icon_color: Base icon color
* @prop --cmb_icon-color--hover, --kup-combo_icon_color--hover: Icon color when hovered
* @prop --cmb_menu-background, --kup-combo_menu_background: Specify menu background
* @prop --cmb_menu-background--hover, --kup-combo_menu_background--hover: Specify menu background on hover
* @prop --cmb_menu-text, --kup-combo_menu_text: Specify menu text color
* @prop --cmb_menu-text--hover, --kup-combo_menu_text--hover: Specify menu text color on hover
* @prop --cmb_background-color, --kup-combo_background: Specify background
* @prop --cmb_background-color--hover, --kup-combo_background--hover: Specify background on hover
* @prop --cmb_text-color, --kup-combo_text-color: Specify background
* @prop --cmb_text-color--hover, --kup-combo_text-color--hover: Specify background on hover
* @prop --cmb_border-radius, --kup-combo_border-radius: Specify border radius
* @prop --cmb_box-shadow, --kup-combo_box-shadow: Specify menu box shadow
*/

// Padding of the input text
$arrow-button-padding: 4px;
$lateral-padding: 6px;

:host {
  // Variables
  --cmb_font-size: var(--kup-combo_input_font-size, 1rem);
  --cmb_border-color: var(--kup-combo_input_border-color, #{$gray-bd});
  --cmb_border-color--selected: var(
    --kup-combo_input_border-color--selected,
    #{darken($gray-80, 10)}
  );
  --cmb_tr-duration: var(--kup-combo_input_transition-duration, #{$trn-time});
  --cmb_icon-color: var(--kup-combo_icon_color, #{$gray-80});
  --cmb_icon-color--hover: var(
    --kup-combo_icon_color--hover,
    #{darken($gray-80, 10)}
  );
  --cmb_menu-background: var(--kup-combo_menu_background, #ffffff);
  --cmb_menu-background--hover: var(
    --kup-combo_menu_background--hover,
    #f0f0f0
  );
  --cmb_menu-text: var(--kup-combo_menu_text, #808080);
  --cmb_menu-text--hover: var(--kup-combo_menu_text--hover, #555555);
  --cmb_background-color: var(--kup-combo_background-color, #ffffff);
  --cmb_background-color--hover: var(
    --kup-combo_background-color--hover,
    #f0f0f0
  );
  --cmb_text-color: var(--kup-combo_text-color, #{$gray-80});
  --cmb_text-color--hover: var(
    --kup-combo_text-color--hover,
    #{darken($gray-80, 10)}
  );
  --cmb_border-radius: var(--kup-combo_border-radius, 2px);
  --cmb_box-shadow: var(
    --kup-combo_box-shadow,
    0px 0px 7.5px 0px rgba(128, 128, 128, 0.5)
  );

  /* Root style
   * [1] - By default, the root of this element must have a position != static to allow correct positioning of its list.
   *    In addition to this, the base z-index is set to 1, but can be regulated by the user accordingly to his/her necessities.
  */
  display: inline-block;
  position: relative; // [1]
  z-index: 1; // [1]
}

.kup-combo {
  // The div containing the input element.
  &__container {
    background-color: var(--cmb_background-color);
    color: var(--cmb_text-color);
    border: 1px solid var(--cmb_border-color);
    border-radius: var(--cmb_border-radius);
    box-sizing: border-box;
    display: inline-flex;
    outline: none;
    transition: border-color 0.25s ease;

    &:hover,
    &:focus {
      border-color: var(--cmb_border-color--selected);

      .value-text {
        color: var(--cmb_text-color--hover);
      }

      svg {
        fill: var(--cmb_icon-color--hover);
      }
    }
  }

  // Common style for the icons
  &__icon {
    fill: var(--cmb_icon-color);
    transition: fill var(--cmb_tr-duration), transform var(--cmb_tr-duration);
  }

  // Style of the container of the currently selected value
  &__current-value {
    align-items: center;
    cursor: pointer;
    display: inline-flex;
    font-size: var(--cmb_font-size);
    justify-content: center;

    .value-text {
      padding: 0 0.25rem;
    }

    svg {
      fill: #{$gray-bd};
    }
  }

  // Chevron icon
  &__chevron {
   

    // When is opened
    &--open {
      transform: rotate(180deg);
    }
  }

  // The clear button for the field
  &__clear {
    align-items: center;
    background-color: transparent;
    border: none;
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    margin: 0;
    outline: none;
    padding: 4px;

    // Clear icon transition
    &:hover > svg {
      fill: var(--cmb_icon-color--hover);
    }
  }

  //---- Ketchup Combo menu ----
  // Absolute menu
  &__menu {
    background-color: var(--cmb_menu-background);
    color: var(--cmb_menu-text);
    border-radius: 0px;
    box-shadow: var(--cmb_box-shadow);
    display: inline-block;
    left: 0;
    opacity: 0;
    position: absolute;
    transition: opacity var(--cmb_tr-duration);
    top: 100%;
    visibility: hidden;
    z-index: 1;

    // When list should be open
    &.is-open {
      opacity: 1;
      visibility: visible;
    }

    // When menu must be open over the trigger
    &.is-top {
      bottom: 100%;
      top: auto;
    }

    // When menu must be open on the left
    &.is-right {
      left: auto;
      right: 0;
    }

    // When using a portal element
    &.is-using-portal {
      position: relative;
    }
  }

  // container of the div for searching
  &__filter {
    box-sizing: border-box;
    display: inline-block;
    padding: 4px;
  }

  // The list of items to display
  &__list {
    display: block;
    list-style-type: none;
    padding: 0;
    min-width: 80px;
    max-height: 400px;
    margin: 0;
    overflow: auto;

    // Each list item
    > li {
      box-sizing: border-box;
      cursor: pointer;
      display: block;
      padding: 6px 8px 5px;
      transition: color var(--cmb_tr-duration),
        background-color var(--cmb_tr-duration);

      &:hover,
      &.is-selected {
        background-color: var(--cmb_menu-background--hover);
        color: var(--cmb_menu-text--hover);
      }

      &:last-of-type {
        border-bottom: none;
      }
    }
  }
}
